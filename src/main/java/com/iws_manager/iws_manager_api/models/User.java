package com.iws_manager.iws_manager_api.models;

import java.time.LocalDateTime;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Entity representing a system user for authentication purposes.
 * Supports Basic Authentication with email/password credentials.
 */
@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@EntityListeners(AuditingEntityListener.class)
@Table(name = "app_user")
public class User {

    /**
     * Unique identifier automatically generated by the database.
     */
    @Id 
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * User's email address (used as username). Must be unique.
     * Example: "user@company.com"
     */
    @Column(unique = true, nullable = false)
    private String email;

    /**
     * Encrypted user password (using BCrypt hashing).
     */
    @Column(nullable = false)
    private String password;

    /**
     * Indicates if the account is active.
     * Default: true
     */
    @Column(nullable = false)
    private boolean active = true;

    /**
     * Timestamp when the user was created.
     * Automatically set on creation.
     */
    @CreatedDate
    @Column(name = "created_at", updatable = false)
    private LocalDateTime createdAt;

    /**
     * Timestamp of the last user update.
     * Automatically updated on modification.
     */
    @LastModifiedDate
    @Column(name = "updated_at")
    private LocalDateTime updatedAt;
}