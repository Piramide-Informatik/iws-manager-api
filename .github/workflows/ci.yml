name: Java CI with SonarCloud

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
    
      - name: Give execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and generate reports
        env:
          DB_URL: jdbc:postgresql://localhost:5432/${{ secrets.POSTGRES_DB }}
          DB_USERNAME: ${{ secrets.POSTGRES_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          ./gradlew clean test
          if grep -q '"failures" value="[1-9]' build/test-results/test/TEST-*.xml; then
            echo "::error::One or more tests failed"
            exit 1
          fi
          ./gradlew build 
          ls -R build/test-results

      - name: Run SonarCloud Analysis
        if: always()
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        with:
          args: >
            -Dsonar.organization=piramide-informatik
            -Dsonar.projectKey=Piramide-Informatik_iws-manager-api
            -Dsonar.java.binaries=build/classes/java/main
            -Dsonar.java.test.binaries=build/classes/java/test
            -Dsonar.junit.reportPaths=build/test-results/test
            -Dsonar.java.coveragePlugin=none
            -Dsonar.coverage.exclusions=**/*
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.host.url=https://sonarcloud.io

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            build/test-results/test/**/*.xml
            build/reports/tests/test/**/*

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test